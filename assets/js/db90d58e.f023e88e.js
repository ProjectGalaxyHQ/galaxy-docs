"use strict";(self.webpackChunkgalaxy_docs=self.webpackChunkgalaxy_docs||[]).push([[2391],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return h}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(n),h=o,k=d["".concat(l,".").concat(h)]||d[h]||p[h]||a;return n?r.createElement(k,i(i({ref:t},u),{},{components:n})):r.createElement(k,i({ref:t},u))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8850:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],s={sidebar_label:"Switch Network",sidebar_position:2},l="Switch Network in Your Wallet",c={unversionedId:"user-tutorial/Switch Network in MetaMask",id:"user-tutorial/Switch Network in MetaMask",title:"Switch Network in Your Wallet",description:"Project Galaxy currently supports Ethereum, Binance Smart Chain, Polygon, Arbitrum, Fantom, Avalanche, and Solana. Sometimes you need to switch the network in your wallet to participate in various campaigns, and here\u2019s the guide on how to accomplish that",source:"@site/doc-guides/2-user-tutorial/Switch Network in MetaMask.md",sourceDirName:"2-user-tutorial",slug:"/user-tutorial/Switch Network in MetaMask",permalink:"/guide/user-tutorial/Switch Network in MetaMask",editUrl:"https://github.com/ProjectGalaxyHQ/galaxy-docs/blob/main",tags:[],version:"current",lastUpdatedAt:1657013520,formattedLastUpdatedAt:"7/5/2022",sidebarPosition:2,frontMatter:{sidebar_label:"Switch Network",sidebar_position:2},sidebar:"docs",previous:{title:"Set Up a Wallet",permalink:"/guide/user-tutorial/Set Up a Wallet"},next:{title:"Claim NFTs on Desktop",permalink:"/guide/user-tutorial/Claim NFTs on Desktop"}},u={},p=[{value:"Find the RPC addresses of the networks",id:"find-the-rpc-addresses-of-the-networks",level:2},{value:"Switch networks on Metamask",id:"switch-networks-on-metamask",level:2},{value:"Useful links for other Wallets",id:"useful-links-for-other-wallets",level:2}],d={toc:p};function h(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"switch-network-in-your-wallet"},"Switch Network in Your Wallet"),(0,a.kt)("p",null,"Project Galaxy currently supports Ethereum, Binance Smart Chain, Polygon, Arbitrum, Fantom, Avalanche, and Solana. Sometimes you need to switch the network in your wallet to participate in various campaigns, and here\u2019s the guide on how to accomplish that"),(0,a.kt)("h2",{id:"find-the-rpc-addresses-of-the-networks"},"Find the RPC addresses of the networks"),(0,a.kt)("p",null,"You can easily find all the networks on ",(0,a.kt)("a",{parentName:"p",href:"https://chainlist.org/"},"https://chainlist.org"),". You will be redirected to the networks\u2019 websites and docs by clicking on them."),(0,a.kt)("p",null,"If you have a Metamask already, choose \u201cAdd To Metamask\u201d to add the networks, and then click on the\xa0",(0,a.kt)("strong",{parentName:"p"},"Approve"),"\xa0button to allow the prompt."),(0,a.kt)("h2",{id:"switch-networks-on-metamask"},"Switch networks on Metamask"),(0,a.kt)("p",null,"Once you've added your desired network, you can switch networks by opening MetaMask and clicking at the top of the MetaMask extension.\xa0You'll see\xa0",(0,a.kt)("strong",{parentName:"p"},"your current network"),"\xa0displayed, click on it and you can\xa0select any network from the drop-down list."),(0,a.kt)("p",null,"Once you click in, you should now be on your desired network."),(0,a.kt)("h2",{id:"useful-links-for-other-wallets"},"Useful links for other Wallets"),(0,a.kt)("p",null,"Rainbow: ",(0,a.kt)("a",{parentName:"p",href:"https://learn.rainbow.me/manage-your-wallets-networks-and-connections"},"https://learn.rainbow.me/manage-your-wallets-networks-and-connections")),(0,a.kt)("p",null,"TrustWallet: ",(0,a.kt)("a",{parentName:"p",href:"https://community.trustwallet.com/c/helpcenter/basics/11"},"https://community.trustwallet.com/c/helpcenter/basics/11")),(0,a.kt)("p",null,"SafePal: ",(0,a.kt)("a",{parentName:"p",href:"https://safepalsupport.zendesk.com/hc/en-us"},"https://safepalsupport.zendesk.com/hc/en-us")),(0,a.kt)("p",null,"ImToken: ",(0,a.kt)("a",{parentName:"p",href:"https://imtoken.gitbook.io/developers/"},"https://imtoken.gitbook.io/developers/")))}h.isMDXComponent=!0}}]);